version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Setup Dependencies
          command: yarn install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Test
          command: yarn test
      - run:
          name: Build
          command: yarn build
  deploy-github-pages:
    docker:
      - image: circleci/node:8
    # branches:
    #   only: 
    #     - master
    steps:
      - checkout
      - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Setup Dependencies
          command: yarn install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Setup git account
          command: git config user.email "lscaper@gmail.com"; git config user.name "Spyna CI";
      - run:
          name: Prepare package
          command: yarn prepare
      - run:
          name: Pre deploy
          command: yarn predeploy
      - add_ssh_keys:
          fingerprints:
            - "02:10:7b:2f:f2:53:f0:bd:d2:91:ef:09:26:4f:32:ff"
      - run:
          name: Deploy docs to gh-pages branch
          command: yarn deploy
  deploy:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Setup Dependencies
          command: yarn install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run: 
          name: Setup npm key
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Npm publish 
          command: npm publish
workflows:
  version: 2
  npm-publish-workflow:
    jobs: 
      - build: 
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /.*/ 
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
  deploy-gh-pages:
    jobs: 
      - build
      - deploy-github-pages:
          requires:
            - build
          filters:
            branches:
              only: master